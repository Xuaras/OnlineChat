{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\Chats.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Cookies from 'js-cookie';\nimport '../Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chats() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [users, setUsers] = useState([]); // Состояние для данных пользователя\n  const [friends, setFriends] = useState([]); // Состояние для списка друзей\n  const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\n\n  // Загрузка данных пользователя при монтировании компонента\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/v1/Current/', {\n      withCredentials: true\n    }).then(response => {\n      setUserData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  // Загрузка списка друзей пользователя и установка начального чата\n  useEffect(() => {\n    if (userData) {\n      axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, {\n        withCredentials: true\n      }).then(response => {\n        const friendsData = response.data;\n        setFriends(friendsData);\n        if (friendsData.length === 0) {\n          setFriends(null);\n        } else {\n          const firstFriendId = friendsData[0].friend_id; // Получаем идентификатор первого друга\n          setChat(firstFriendId); // Устанавливаем первого друга как выбранный чат\n          Cookies.set('friend_chat_id', firstFriendId); // Сохраняем выбранный чат в cookies\n        }\n      }).catch(error => {\n        console.error('Ошибка при получении данных о друзьях:', error);\n      });\n    }\n  }, [userData]);\n\n  // Загрузка списка пользователей, кроме текущего пользователя\n  useEffect(() => {\n    if (userData) {\n      axios.get('http://localhost:8000/api/v1/Users/', {\n        params: {\n          exclude_ids: userData.id\n        },\n        withCredentials: true\n      }).then(response => {\n        setUsers(response.data);\n      }).catch(error => {\n        console.error('Ошибка при получении списка пользователей:', error);\n      });\n    }\n  }, [userData]);\n\n  // Функция для добавления друга\n  const addtoFriend = userId => {\n    axios.post('http://localhost:8000/api/v1/Friend/', {\n      user1: userData.id,\n      user2: userId,\n      status: 'added'\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log('Друг успешно добавлен:', response.data);\n      // Можно обновить список друзей или выполнить другие действия после успешного добавления\n    }).catch(error => {\n      console.error('Ошибка при добавлении друга:', error);\n    });\n  };\n\n  // Функция для выбора чата с другом\n  const toggleChat = friendId => {\n    setChat(friendId); // Установка выбранного чата\n    Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend_list\",\n      children: friends !== null && friends.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: chat === item.friend_id ? 'chat_active' : 'chat' // Добавляем класс 'chat_active' для активного чата\n        ,\n\n        onClick: () => toggleChat(item.friend_id) // Вызов toggleChat при клике на элемент списка\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://127.0.0.1:8000${item.friend_avatar}`,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u0434\\u0440\\u0443\\u0433\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat_name\",\n          children: item.friend_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, item.friend_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Potential friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"potential_friend\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addtoFriend(item.id),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Chats, \"6jcv8l9iboBJbBGrVRtOL1nsxx8=\");\n_c = Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["axios","useState","useEffect","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","userData","setUserData","users","setUsers","friends","setFriends","chat","setChat","get","withCredentials","then","response","data","catch","error","console","id","friendsData","length","firstFriendId","friend_id","set","params","exclude_ids","addtoFriend","userId","post","user1","user2","status","log","toggleChat","friendId","children","className","map","item","onClick","src","friend_avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","friend_name","avatar","username","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/Chats.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport '../Chat.css'\r\nexport function Chats() {\r\n    const [userData, setUserData] = useState(null);\r\n    const [users, setUsers] = useState([]); // Состояние для данных пользователя\r\n    const [friends, setFriends] = useState([]); // Состояние для списка друзей\r\n    const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\r\n    \r\n    // Загрузка данных пользователя при монтировании компонента\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/v1/Current/', { withCredentials: true })\r\n            .then(response => {\r\n                setUserData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    // Загрузка списка друзей пользователя и установка начального чата\r\n    useEffect(() => {\r\n        if (userData) {\r\n            axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, { withCredentials: true })\r\n                .then(response => {\r\n                    const friendsData = response.data;\r\n                    setFriends(friendsData);\r\n\r\n                    if (friendsData.length === 0) {\r\n                        setFriends(null);\r\n                    } else {\r\n                        const firstFriendId = friendsData[0].friend_id; // Получаем идентификатор первого друга\r\n                        setChat(firstFriendId); // Устанавливаем первого друга как выбранный чат\r\n                        Cookies.set('friend_chat_id', firstFriendId); // Сохраняем выбранный чат в cookies\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Ошибка при получении данных о друзьях:', error);\r\n                });\r\n        }\r\n    }, [userData]);\r\n\r\n    // Загрузка списка пользователей, кроме текущего пользователя\r\n    useEffect(() => {\r\n        if (userData) {\r\n            axios.get('http://localhost:8000/api/v1/Users/', {\r\n                params: {\r\n                    exclude_ids: userData.id\r\n                },\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                setUsers(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при получении списка пользователей:', error);\r\n            });\r\n        }\r\n    }, [userData]);\r\n\r\n    // Функция для добавления друга\r\n    const addtoFriend = (userId) => {\r\n        axios.post('http://localhost:8000/api/v1/Friend/', { user1: userData.id, user2: userId, status: 'added' }, { withCredentials: true })\r\n            .then(response => {\r\n                console.log('Друг успешно добавлен:', response.data);\r\n                // Можно обновить список друзей или выполнить другие действия после успешного добавления\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при добавлении друга:', error);\r\n            });\r\n    };\r\n\r\n    // Функция для выбора чата с другом\r\n    const toggleChat = (friendId) => {\r\n        setChat(friendId); // Установка выбранного чата\r\n        Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"friend_list\">\r\n                {friends !== null && friends.map(item => (\r\n                    <div\r\n                        className={chat === item.friend_id ? 'chat_active' : 'chat'} // Добавляем класс 'chat_active' для активного чата\r\n                        key={item.friend_id}\r\n                        onClick={() => toggleChat(item.friend_id)} // Вызов toggleChat при клике на элемент списка\r\n                    >\r\n                        <img src={`http://127.0.0.1:8000${item.friend_avatar}`} alt=\"Аватар друга\" />\r\n                        <span className=\"chat_name\">{item.friend_name}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"user_list\">\r\n                <h3>Potential friends</h3>\r\n                {users.map(item => (\r\n                    <div className=\"potential_friend\" key={item.id}>\r\n                        <img src={item.avatar} alt=\"Аватар пользователя\" />\r\n                        <span>{item.username}</span>\r\n                        <button onClick={() => addtoFriend(item.id)}>Add</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
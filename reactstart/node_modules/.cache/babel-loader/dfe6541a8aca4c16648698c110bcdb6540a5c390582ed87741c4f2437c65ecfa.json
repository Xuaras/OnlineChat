{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\Chats.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chats() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [users, setUsers] = useState([]); // Состояние для данных пользователя\n  const [friends, setFriends] = useState([]); // Состояние для списка друзей\n  const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\n\n  // Загрузка данных пользователя при монтировании компонента\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/v1/Current/', {\n      withCredentials: true\n    }).then(response => {\n      setUserData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  // Загрузка списка друзей пользователя и установка начального чата\n  useEffect(() => {\n    if (userData) {\n      axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, {\n        withCredentials: true\n      }).then(response => {\n        const friendsData = response.data;\n        setFriends(friendsData);\n        if (friendsData.length === 0) {\n          setFriends(null);\n        } else {\n          const firstFriendId = friendsData[0].friend_id; // Получаем идентификатор первого друга\n          setChat(firstFriendId); // Устанавливаем первого друга как выбранный чат\n          Cookies.set('friend_chat_id', firstFriendId); // Сохраняем выбранный чат в cookiesds\n          const excludeIds = friendsData.map(friend => friend.friend_id).join(',');\n        }\n      }).catch(error => {\n        console.error('Ошибка при получении данных о друзьях:', error);\n      });\n    }\n  }, [userData]);\n  // Зависимость от userData, чтобы загрузить данные друзей после получения данных пользователя\n  const addtoFriend = userId => {\n    axios.post('http://localhost:8000/api/v1/Friend/', {\n      user1: userData.id,\n      user2: userId,\n      status: 'added'\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log('Друг успешно добавлен:', response.data);\n      // Можно обновить список друзей или выполнить другие действия после успешного добавления\n    }).catch(error => {\n      console.error('Ошибка при добавлении друга:', error);\n    });\n  };\n  // Функция для выбора чата с другом\n  const toggleChat = friendId => {\n    setChat(friendId); // Установка выбранного чата\n    Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\n  };\n  if (friends !== null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_list\",\n        children: friends.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: chat === item.friend_id ? 'chat_active' : 'chat' // Добавляем класс 'chat_active' для активного чата\n          ,\n\n          onClick: () => toggleChat(item.friend_id) // Вызов toggleChat при клике на элемент списка\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:8000${item.friend_avatar}`,\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u0434\\u0440\\u0443\\u0433\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat_name\",\n            children: item.friend_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, item.friend_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Potensial friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potensial_friend\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addtoFriend(item.id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Potensial friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potensial_friend\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addtoFriend(item.id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Chats, \"h/bER5YgX7FAOAzVNy150sdhKoM=\");\n_c = Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["axios","useState","useEffect","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","userData","setUserData","users","setUsers","friends","setFriends","chat","setChat","get","withCredentials","then","response","data","catch","error","console","id","friendsData","length","firstFriendId","friend_id","set","excludeIds","map","friend","join","addtoFriend","userId","post","user1","user2","status","log","toggleChat","friendId","children","className","item","onClick","src","friend_avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","friend_name","avatar","username","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/Chats.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function Chats() {\r\n    const [userData, setUserData] = useState(null);\r\n    const [users, setUsers] = useState([]); // Состояние для данных пользователя\r\n    const [friends, setFriends] = useState([]); // Состояние для списка друзей\r\n    const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\r\n    \r\n    // Загрузка данных пользователя при монтировании компонента\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/v1/Current/', { withCredentials: true })\r\n            .then(response => {\r\n                setUserData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    // Загрузка списка друзей пользователя и установка начального чата\r\n    useEffect(() => {\r\n        if (userData) {\r\n            axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, { withCredentials: true })\r\n                .then(response => {\r\n                    const friendsData = response.data;\r\n                    setFriends(friendsData);\r\n\r\n                    if (friendsData.length === 0) {\r\n                        setFriends(null);\r\n                    } else {\r\n                        const firstFriendId = friendsData[0].friend_id; // Получаем идентификатор первого друга\r\n                        setChat(firstFriendId); // Устанавливаем первого друга как выбранный чат\r\n                        Cookies.set('friend_chat_id', firstFriendId); // Сохраняем выбранный чат в cookiesds\r\n                        const excludeIds = friendsData.map(friend => friend.friend_id).join(',');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Ошибка при получении данных о друзьях:', error);\r\n                });\r\n        }\r\n    }, [userData]);\r\n     // Зависимость от userData, чтобы загрузить данные друзей после получения данных пользователя\r\n     const addtoFriend = (userId) => {\r\n        axios.post('http://localhost:8000/api/v1/Friend/', { user1: userData.id, user2: userId, status: 'added' }, { withCredentials: true })\r\n            .then(response => {\r\n                console.log('Друг успешно добавлен:', response.data);\r\n                // Можно обновить список друзей или выполнить другие действия после успешного добавления\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при добавлении друга:', error);\r\n            });\r\n    };\r\n    // Функция для выбора чата с другом\r\n    const toggleChat = (friendId) => {\r\n        setChat(friendId); // Установка выбранного чата\r\n        Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\r\n    };\r\n\r\n    if (friends !== null) {\r\n        return (\r\n            <>\r\n                <div className=\"friend_list\">\r\n                    {friends.map(item => (\r\n                        <div\r\n                            className={chat === item.friend_id ? 'chat_active' : 'chat'} // Добавляем класс 'chat_active' для активного чата\r\n                            key={item.friend_id}\r\n                            onClick={() => toggleChat(item.friend_id)} // Вызов toggleChat при клике на элемент списка\r\n                        >\r\n                            <img src={`http://127.0.0.1:8000${item.friend_avatar}`} alt=\"Аватар друга\" />\r\n                            <span className=\"chat_name\">{item.friend_name}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"user_list\">\r\n                    <h3>Potensial friend</h3>\r\n                    {users.map(item=>(\r\n                        <div className=\"potensial_friend\">\r\n                            <img src={item.avatar} alt=\"\" />\r\n                            <span>{item.username}</span>\r\n                            <button onClick={()=>addtoFriend(item.id)}>Add</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"user_list\">\r\n                    <h3>Potensial friend</h3>\r\n                    {users.map(item=>(\r\n                        <div className=\"potensial_friend\">\r\n                            <img src={item.avatar} alt=\"\" />\r\n                            <span>{item.username}</span>\r\n                            <button onClick={()=>addtoFriend(item.id)}>Add</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZF,KAAK,CAACkB,GAAG,CAAC,uCAAuC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACxEC,IAAI,CAACC,QAAQ,IAAI;MACdV,WAAW,CAACU,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtB,SAAS,CAAC,MAAM;IACZ,IAAIQ,QAAQ,EAAE;MACVV,KAAK,CAACkB,GAAG,CAAC,wCAAwCR,QAAQ,CAACgB,EAAE,GAAG,EAAE;QAAEP,eAAe,EAAE;MAAK,CAAC,CAAC,CACvFC,IAAI,CAACC,QAAQ,IAAI;QACd,MAAMM,WAAW,GAAGN,QAAQ,CAACC,IAAI;QACjCP,UAAU,CAACY,WAAW,CAAC;QAEvB,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;UAC1Bb,UAAU,CAAC,IAAI,CAAC;QACpB,CAAC,MAAM;UACH,MAAMc,aAAa,GAAGF,WAAW,CAAC,CAAC,CAAC,CAACG,SAAS,CAAC,CAAC;UAChDb,OAAO,CAACY,aAAa,CAAC,CAAC,CAAC;UACxB1B,OAAO,CAAC4B,GAAG,CAAC,gBAAgB,EAAEF,aAAa,CAAC,CAAC,CAAC;UAC9C,MAAMG,UAAU,GAAGL,WAAW,CAACM,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACJ,SAAS,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;QAC5E;MACJ,CAAC,CAAC,CACDZ,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAClE,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EACb;EACA,MAAM0B,WAAW,GAAIC,MAAM,IAAK;IAC7BrC,KAAK,CAACsC,IAAI,CAAC,sCAAsC,EAAE;MAAEC,KAAK,EAAE7B,QAAQ,CAACgB,EAAE;MAAEc,KAAK,EAAEH,MAAM;MAAEI,MAAM,EAAE;IAAQ,CAAC,EAAE;MAAEtB,eAAe,EAAE;IAAK,CAAC,CAAC,CAChIC,IAAI,CAACC,QAAQ,IAAI;MACdI,OAAO,CAACiB,GAAG,CAAC,wBAAwB,EAAErB,QAAQ,CAACC,IAAI,CAAC;MACpD;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC;EACD;EACA,MAAMmB,UAAU,GAAIC,QAAQ,IAAK;IAC7B3B,OAAO,CAAC2B,QAAQ,CAAC,CAAC,CAAC;IACnBzC,OAAO,CAAC4B,GAAG,CAAC,gBAAgB,EAAEa,QAAQ,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,IAAI9B,OAAO,KAAK,IAAI,EAAE;IAClB,oBACIT,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACIxC,OAAA;QAAKyC,SAAS,EAAC,aAAa;QAAAD,QAAA,EACvB/B,OAAO,CAACmB,GAAG,CAACc,IAAI,iBACb1C,OAAA;UACIyC,SAAS,EAAE9B,IAAI,KAAK+B,IAAI,CAACjB,SAAS,GAAG,aAAa,GAAG,MAAO,CAAC;UAAA;;UAE7DkB,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACI,IAAI,CAACjB,SAAS,CAAE,CAAC;UAAA;UAAAe,QAAA,gBAE3CxC,OAAA;YAAK4C,GAAG,EAAE,wBAAwBF,IAAI,CAACG,aAAa,EAAG;YAACC,GAAG,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7ElD,OAAA;YAAMyC,SAAS,EAAC,WAAW;YAAAD,QAAA,EAAEE,IAAI,CAACS;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAJhDR,IAAI,CAACjB,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKlB,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlD,OAAA;QAAKyC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACtBxC,OAAA;UAAAwC,QAAA,EAAI;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxB3C,KAAK,CAACqB,GAAG,CAACc,IAAI,iBACX1C,OAAA;UAAKyC,SAAS,EAAC,kBAAkB;UAAAD,QAAA,gBAC7BxC,OAAA;YAAK4C,GAAG,EAAEF,IAAI,CAACU,MAAO;YAACN,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChClD,OAAA;YAAAwC,QAAA,EAAOE,IAAI,CAACW;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BlD,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAIZ,WAAW,CAACW,IAAI,CAACrB,EAAE,CAAE;YAAAmB,QAAA,EAAC;UAAG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR,CAAC;EAEX,CAAC,MAAM;IACH,oBACIlD,OAAA,CAAAE,SAAA;MAAAsC,QAAA,eACIxC,OAAA;QAAKyC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACtBxC,OAAA;UAAAwC,QAAA,EAAI;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxB3C,KAAK,CAACqB,GAAG,CAACc,IAAI,iBACX1C,OAAA;UAAKyC,SAAS,EAAC,kBAAkB;UAAAD,QAAA,gBAC7BxC,OAAA;YAAK4C,GAAG,EAAEF,IAAI,CAACU,MAAO;YAACN,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChClD,OAAA;YAAAwC,QAAA,EAAOE,IAAI,CAACW;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BlD,OAAA;YAAQ2C,OAAO,EAAEA,CAAA,KAAIZ,WAAW,CAACW,IAAI,CAACrB,EAAE,CAAE;YAAAmB,QAAA,EAAC;UAAG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,gBACR,CAAC;EAEX;AACJ;AAAC9C,EAAA,CAnGeD,KAAK;AAAAmD,EAAA,GAALnD,KAAK;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
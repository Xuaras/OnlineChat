{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\ChatArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport online_img from './../images/shape.png';\nimport send_message from './../images/mail.png';\nimport { mergeMessages } from './../mergedMessages.js';\nimport '../static/css/Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatArea() {\n  _s();\n  const [chattingWith, setChatting] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]); // Состояние для хранения сообщений\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/v1/chats/your_chat/?your_id=${Cookies.get('user_id')}`).then(response => {\n      setChatting(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (chattingWith) {\n      const ws = new WebSocket('ws://localhost:8000/ws/some/');\n      ws.onopen = function () {\n        const senderId = Cookies.get('user_id');\n        const receiverId = chattingWith.chatting_with;\n        ws.send(JSON.stringify({\n          sender_id: senderId,\n          receiver_id: receiverId\n        }));\n      };\n      ws.onmessage = function (event) {\n        const data = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, data]); // Добавляем новое сообщение в состояние\n        console.log(data);\n      };\n      ws.onclose = function (event) {\n        console.log('WebSocket connection closed:', event);\n      };\n      ws.onerror = function (error) {\n        console.error('WebSocket error:', error);\n      };\n      setSocket(ws);\n      return () => ws.close(); // Закрытие WebSocket при размонтировании компонента\n    }\n  }, [chattingWith]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nick_name_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"\",\n        className: \"friend_avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: chattingWith === null || chattingWith === void 0 ? void 0 : chattingWith.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"online\",\n        children: \"online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: online_img,\n        alt: \"\",\n        className: \"online_circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_message_area\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.sender === Cookies.get('user_id') ? 'message' : 'friend_message',\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: message.sender === Cookies.get('user_id') ? 'message_text' : 'friend_message_text',\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send_message_bt\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: send_message,\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatArea, \"gCdYtGY78aroACtpdz5B0oQXIgQ=\");\n_c = ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","online_img","send_message","mergeMessages","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","_s","chattingWith","setChatting","socket","setSocket","messages","setMessages","get","then","response","data","catch","error","console","log","ws","WebSocket","onopen","senderId","receiverId","chatting_with","send","JSON","stringify","sender_id","receiver_id","onmessage","event","parse","prevMessages","onclose","onerror","close","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","map","message","index","sender","content","type","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/ChatArea.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport online_img from './../images/shape.png';\r\nimport send_message from './../images/mail.png';\r\nimport { mergeMessages } from './../mergedMessages.js';\r\nimport '../static/css/Chat.css';\r\n\r\nexport function ChatArea() {\r\n    const [chattingWith, setChatting] = useState(null);\r\n    const [socket, setSocket] = useState(null);\r\n    const [messages, setMessages] = useState([]); // Состояние для хранения сообщений\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:8000/api/v1/chats/your_chat/?your_id=${Cookies.get('user_id')}`)\r\n            .then(response => {\r\n                setChatting(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chattingWith) {\r\n            const ws = new WebSocket('ws://localhost:8000/ws/some/');\r\n\r\n            ws.onopen = function() {\r\n                const senderId = Cookies.get('user_id');\r\n                const receiverId = chattingWith.chatting_with;\r\n                ws.send(JSON.stringify({ sender_id: senderId, receiver_id: receiverId }));\r\n            };\r\n\r\n            ws.onmessage = function(event) {\r\n                const data = JSON.parse(event.data);\r\n                setMessages(prevMessages => [...prevMessages, data]); // Добавляем новое сообщение в состояние\r\n                console.log(data);\r\n            };\r\n\r\n            ws.onclose = function(event) {\r\n                console.log('WebSocket connection closed:', event);\r\n            };\r\n\r\n            ws.onerror = function(error) {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            setSocket(ws);\r\n\r\n            return () => ws.close(); // Закрытие WebSocket при размонтировании компонента\r\n        }\r\n    }, [chattingWith]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nick_name_area\">\r\n                <img src='' alt=\"\" className='friend_avatar' />\r\n                <span>{chattingWith?.username}</span> {/* Отображаем имя пользователя */}\r\n                <span className=\"online\">online</span>\r\n                <img src={online_img} alt=\"\" className=\"online_circle\" />\r\n            </div>\r\n\r\n            <div className=\"chat_message_area\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className={message.sender === Cookies.get('user_id') ? 'message' : 'friend_message'}>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <p className={message.sender === Cookies.get('user_id') ? 'message_text' : 'friend_message_text'}>\r\n                            {message.content}\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button className=\"send_message_bt\" type=\"submit\">\r\n                <img src={send_message} alt=\"Send\" />\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
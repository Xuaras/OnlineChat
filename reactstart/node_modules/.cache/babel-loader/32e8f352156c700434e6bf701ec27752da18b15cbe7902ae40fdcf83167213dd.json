{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\ChatArea.jsx\",\n  _s = $RefreshSig$();\n// Часть отвечающая  за сам чат (написано очень каряво)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport online_img from './../images/shape.png';\nimport send_message from './../images/mail.png';\nimport { mergeMessages } from './../static/js/mergedMessages.js';\nimport '../static/css/Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatArea() {\n  _s();\n  const [userData, setUserData] = useState({});\n  const [friendData, setFriendData] = useState({});\n  const [myMessages, setMyMessages] = useState([]);\n  const [friendMessages, setFriendMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/v1/Current/', {\n      withCredentials: true\n    }).then(response => {\n      setUserData(response.data);\n    }).catch(error => {\n      console.error('Error fetching current user:', error);\n    });\n  }, []);\n  useEffect(() => {\n    if (userData.id && Cookies.get('friend_chat_id')) {\n      fetchMyMessages();\n    }\n  }, [userData.id]);\n  useEffect(() => {\n    if (Cookies.get('friend_chat_id') && userData.id) {\n      fetchFriendMessages();\n    }\n  }, [Cookies.get('friend_chat_id'), userData.id]);\n  useEffect(() => {\n    if (Cookies.get('friend_chat_id')) {\n      fetchFriendData();\n    }\n  }, [Cookies.get('friend_chat_id')]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (Cookies.get('friend_chat_id')) {\n        fetchFriendData();\n        fetchMyMessages();\n        fetchFriendMessages();\n      }\n    }, 500); // Сделал через полинг, потому что на websockets пока мозгов не хватило\n\n    return () => clearInterval(interval);\n  }, []);\n  const fetchFriendData = () => {\n    axios.get(`http://localhost:8000/api/v1/Users/${Cookies.get('friend_chat_id')}/`, {\n      withCredentials: true\n    }).then(response => {\n      setFriendData(response.data);\n    }).catch(error => {\n      console.error('Error fetching friend data:', error);\n    });\n  };\n  const fetchMyMessages = () => {\n    if (Object.keys(friendData).length > 0) {\n      axios.get(`http://127.0.0.1:8000/api/v1/Messages/${userData.id}/${Cookies.get('friend_chat_id')}/`).then(response => {\n        setMyMessages(response.data);\n      }).catch(error => {\n        console.error('Error fetching my messages:', error);\n      });\n    }\n  };\n  const fetchFriendMessages = () => {\n    if (Object.keys(friendData).length > 0) {\n      axios.get(`http://127.0.0.1:8000/api/v1/Messages/${Cookies.get('friend_chat_id')}/${userData.id}/`).then(response => {\n        setFriendMessages(response.data);\n      }).catch(error => {\n        console.error('Error fetching friend messages:', error);\n      });\n    }\n  };\n  const sendMessage = () => {\n    const messageContent = messageInput.trim();\n    if (messageContent === '') {\n      alert('Please enter a message.');\n      return;\n    }\n    const newMessage = {\n      sender: userData.id,\n      receiver: Cookies.get('friend_chat_id'),\n      content: messageContent,\n      time_of_message: new Date().toISOString()\n    };\n    axios.post(`http://127.0.0.1:8000/api/v1/Message/`, newMessage).then(response => {\n      fetchFriendData();\n      fetchMyMessages();\n      fetchFriendMessages();\n      setMessageInput('');\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  {\n    console.log(friendData);\n  }\n  if (Object.keys(friendData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"without_friend\",\n        children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\\u0443 \\u0434\\u0440\\u0443\\u0437\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nick_name_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: friendData.avatar,\n          alt: \"\",\n          className: \"friend_avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: friendData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"online\",\n          children: \"online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: online_img,\n          alt: \"\",\n          className: \"online_circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_message_area\",\n        children: mergeMessages(myMessages, friendMessages).sort((msg1, msg2) => new Date(msg1.time_of_message) - new Date(msg2.time_of_message)).map((msg, index) => {\n          const isOwnMessage = msg.sender === userData.id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${isOwnMessage ? 'own_message' : 'friend_message'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: isOwnMessage ? `http://127.0.0.1:8000${userData.avatar}` : friendData.avatar,\n              alt: isOwnMessage ? \"My Avatar\" : \"Friend's Avatar\",\n              className: \"message_avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `message_text ${isOwnMessage ? '' : 'friend_message_text'}`,\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"input_message\",\n        id: \"input_message\",\n        placeholder: \"Your message\",\n        className: \"input_message\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send_message_bt\",\n        type: \"submit\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: send_message,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 89\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(ChatArea, \"3SwAUNi/gFRm1vUS6cbpvVmvgP0=\");\n_c = ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","online_img","send_message","mergeMessages","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","_s","userData","setUserData","friendData","setFriendData","myMessages","setMyMessages","friendMessages","setFriendMessages","messageInput","setMessageInput","get","withCredentials","then","response","data","catch","error","console","id","fetchMyMessages","fetchFriendMessages","fetchFriendData","interval","setInterval","clearInterval","Object","keys","length","sendMessage","messageContent","trim","alert","newMessage","sender","receiver","content","time_of_message","Date","toISOString","post","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","avatar","alt","username","sort","msg1","msg2","map","msg","index","isOwnMessage","type","name","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/ChatArea.jsx"],"sourcesContent":["// Часть отвечающая  за сам чат (написано очень каряво)\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport online_img from './../images/shape.png';\r\nimport send_message from './../images/mail.png';\r\nimport { mergeMessages } from './../static/js/mergedMessages.js';\r\nimport '../static/css/Chat.css';\r\n\r\nexport function ChatArea() {\r\n    const [userData, setUserData] = useState({});\r\n    const [friendData, setFriendData] = useState({});\r\n    const [myMessages, setMyMessages] = useState([]);\r\n    const [friendMessages, setFriendMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/v1/Current/', { withCredentials: true })\r\n            .then(response => {\r\n                setUserData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching current user:', error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userData.id && Cookies.get('friend_chat_id')) {\r\n            fetchMyMessages();\r\n        }\r\n    }, [userData.id]);\r\n\r\n    useEffect(() => {\r\n        if (Cookies.get('friend_chat_id') && userData.id) {\r\n            fetchFriendMessages();\r\n        }\r\n    }, [Cookies.get('friend_chat_id'), userData.id]);\r\n\r\n    useEffect(() => {\r\n        if (Cookies.get('friend_chat_id')) {\r\n            fetchFriendData();\r\n        }\r\n    }, [Cookies.get('friend_chat_id')]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (Cookies.get('friend_chat_id')) {\r\n                fetchFriendData();\r\n                fetchMyMessages();\r\n                fetchFriendMessages();\r\n            }\r\n        }, 500); // Сделал через полинг, потому что на websockets пока мозгов не хватило\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const fetchFriendData = () => {\r\n        \r\n        axios.get(`http://localhost:8000/api/v1/Users/${Cookies.get('friend_chat_id')}/`, { withCredentials: true })\r\n            .then(response => {\r\n                setFriendData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching friend data:', error);\r\n            });\r\n    };\r\n\r\n    const fetchMyMessages = () => {\r\n        if(Object.keys(friendData).length > 0){\r\n        axios.get(`http://127.0.0.1:8000/api/v1/Messages/${userData.id}/${Cookies.get('friend_chat_id')}/`)\r\n            .then(response => {\r\n                setMyMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching my messages:', error);\r\n            });}\r\n    };\r\n\r\n    const fetchFriendMessages = () => {\r\n        if(Object.keys(friendData).length > 0){\r\n        axios.get(`http://127.0.0.1:8000/api/v1/Messages/${Cookies.get('friend_chat_id')}/${userData.id}/`)\r\n            .then(response => {\r\n                setFriendMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching friend messages:', error);\r\n            });}\r\n    };\r\n\r\n\r\n    const sendMessage = () => {\r\n        const messageContent = messageInput.trim();\r\n        if (messageContent === '') {\r\n            alert('Please enter a message.');\r\n            return;\r\n        }\r\n\r\n        const newMessage = {\r\n            sender: userData.id,\r\n            receiver: Cookies.get('friend_chat_id'),\r\n            content: messageContent,\r\n            time_of_message: new Date().toISOString(),\r\n        };\r\n\r\n        axios.post(`http://127.0.0.1:8000/api/v1/Message/`, newMessage)\r\n            .then(response => {\r\n                fetchFriendData();\r\n                fetchMyMessages();\r\n                fetchFriendMessages();\r\n                setMessageInput('');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error sending message:', error);\r\n            });\r\n    };\r\n    {console.log(friendData);}\r\n    if (Object.keys(friendData).length === 0) {\r\n        return (\r\n            <>\r\n                <div className='without_friend'>\r\n                    У вас пока нету друзей\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"nick_name_area\">\r\n                    <img src={friendData.avatar} alt=\"\" className='friend_avatar'/>\r\n                    <span>{friendData.username}</span>\r\n                    <span className=\"online\">online</span>\r\n                    <img src={online_img} alt=\"\" className=\"online_circle\"/>\r\n                </div>\r\n                <div className=\"chat_message_area\">\r\n                    {mergeMessages(myMessages, friendMessages)\r\n                        .sort((msg1, msg2) => new Date(msg1.time_of_message) - new Date(msg2.time_of_message))\r\n                        .map((msg, index) => {\r\n                            const isOwnMessage = msg.sender === userData.id;\r\n                            return (\r\n                                <div key={msg.id} className={`message ${isOwnMessage ? 'own_message' : 'friend_message'}`}>\r\n                                    <img src={isOwnMessage ? `http://127.0.0.1:8000${userData.avatar}` : friendData.avatar} alt={isOwnMessage ? \"My Avatar\" : \"Friend's Avatar\"} className=\"message_avatar\"/>\r\n                                    <p className={`message_text ${isOwnMessage ? '' : 'friend_message_text'}`}>{msg.content}</p>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"input_message\"\r\n                    id=\"input_message\"\r\n                    placeholder=\"Your message\"\r\n                    className='input_message'\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                />\r\n                <button className=\"send_message_bt\" type=\"submit\" onClick={sendMessage}><img src={send_message} alt=\"Send\"/></button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\ChatArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport chat_avatar from '../ava.jpg';\nimport online_img from '../shape.png';\nimport send_message from '../mail.png';\nimport '../Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatArea() {\n  _s();\n  const [userData, setUserData] = useState({});\n  const [friendData, setFriendData] = useState({});\n  const [myMessages, setMyMessages] = useState([]);\n  const [friendMessages, setFriendMessages] = useState([]);\n  useEffect(() => {\n    // Fetch current user data\n    axios.get('http://localhost:8000/api/v1/Current/', {\n      withCredentials: true\n    }).then(response => {\n      setUserData(response.data);\n    }).catch(error => {\n      console.error('Error fetching current user:', error);\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch messages sent by current user to friend\n    if (userData.id && Cookies.get('friend_chat_id')) {\n      fetchMyMessages();\n    }\n  }, [userData.id]);\n  useEffect(() => {\n    // Fetch messages sent by friend to current user\n    if (Cookies.get('friend_chat_id') && userData.id) {\n      fetchFriendMessages();\n    }\n  }, [Cookies.get('friend_chat_id'), userData.id]);\n  useEffect(() => {\n    // Fetch friend's data\n    if (Cookies.get('friend_chat_id')) {\n      fetchFriendData();\n    }\n  }, [Cookies.get('friend_chat_id')]);\n  useEffect(() => {\n    // Polling for message updates every 10 seconds (adjust as needed)\n    const interval = setInterval(() => {\n      if (Cookies.get('friend_chat_id')) {\n        fetchMyMessages();\n        fetchFriendMessages();\n      }\n    }, 5000); // 10 seconds interval\n\n    return () => clearInterval(interval); // Cleanup on unmount or dependencies change\n  }, []);\n  const fetchMyMessages = () => {\n    axios.get(`http://127.0.0.1:8000/api/v1/Messages/${userData.id}/${Cookies.get('friend_chat_id')}/`).then(response => {\n      setMyMessages(response.data);\n    }).catch(error => {\n      console.error('Error fetching my messages:', error);\n    });\n  };\n  const fetchFriendMessages = () => {\n    axios.get(`http://127.0.0.1:8000/api/v1/Messages/${Cookies.get('friend_chat_id')}/${userData.id}/`).then(response => {\n      setFriendMessages(response.data);\n    }).catch(error => {\n      console.error('Error fetching friend messages:', error);\n    });\n  };\n  const fetchFriendData = () => {\n    axios.get(`http://localhost:8000/api/v1/Users/${Cookies.get('friend_chat_id')}/`, {\n      withCredentials: true\n    }).then(response => {\n      setFriendData(response.data);\n    }).catch(error => {\n      console.error('Error fetching friend data:', error);\n    });\n  };\n  const sendMessage = () => {\n    // Implement sending message functionality\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nick_name_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: friendData.avatar,\n        alt: \"\",\n        className: \"friend_avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: friendData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"online\",\n        children: \"online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: online_img,\n        alt: \"\",\n        className: \"online_circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_message_area\",\n      children: myMessages.concat(friendMessages).map((msg, index) => msg.hasOwnProperty('avatar') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message own_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://127.0.0.1:8000${friendData.avatar}`,\n          alt: \"My Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message_text\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"friend_message_text\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: friendData.avatar,\n          alt: \"Friend's Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"input_message\",\n      id: \"input_message\",\n      placeholder: \"Your message\",\n      className: \"input_message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send_message_bt\",\n      type: \"submit\",\n      onClick: sendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: send_message,\n        alt: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatArea, \"0v8A5t/Uq2Kw/IYGJK2OCMnr63c=\");\n_c = ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","chat_avatar","online_img","send_message","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","_s","userData","setUserData","friendData","setFriendData","myMessages","setMyMessages","friendMessages","setFriendMessages","get","withCredentials","then","response","data","catch","error","console","id","fetchMyMessages","fetchFriendMessages","fetchFriendData","interval","setInterval","clearInterval","sendMessage","children","className","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","concat","map","msg","index","hasOwnProperty","content","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/ChatArea.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport chat_avatar from '../ava.jpg';\r\nimport online_img from '../shape.png';\r\nimport send_message from '../mail.png';\r\nimport '../Chat.css';\r\nexport function ChatArea() {\r\n    const [userData, setUserData] = useState({});\r\n    const [friendData, setFriendData] = useState({});\r\n    const [myMessages, setMyMessages] = useState([]);\r\n    const [friendMessages, setFriendMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch current user data\r\n        axios.get('http://localhost:8000/api/v1/Current/', { withCredentials: true })\r\n            .then(response => {\r\n                setUserData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching current user:', error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Fetch messages sent by current user to friend\r\n        if (userData.id && Cookies.get('friend_chat_id')) {\r\n            fetchMyMessages();\r\n        }\r\n    }, [userData.id]);\r\n\r\n    useEffect(() => {\r\n        // Fetch messages sent by friend to current user\r\n        if (Cookies.get('friend_chat_id') && userData.id) {\r\n            fetchFriendMessages();\r\n        }\r\n    }, [Cookies.get('friend_chat_id'), userData.id]);\r\n\r\n    useEffect(() => {\r\n        // Fetch friend's data\r\n        if (Cookies.get('friend_chat_id')) {\r\n            fetchFriendData();\r\n        }\r\n    }, [Cookies.get('friend_chat_id')]);\r\n\r\n    useEffect(() => {\r\n        // Polling for message updates every 10 seconds (adjust as needed)\r\n        const interval = setInterval(() => {\r\n            if (Cookies.get('friend_chat_id')) {\r\n                fetchMyMessages();\r\n                fetchFriendMessages();\r\n            }\r\n        }, 5000); // 10 seconds interval\r\n\r\n        return () => clearInterval(interval); // Cleanup on unmount or dependencies change\r\n    }, []);\r\n\r\n    const fetchMyMessages = () => {\r\n        axios.get(`http://127.0.0.1:8000/api/v1/Messages/${userData.id}/${Cookies.get('friend_chat_id')}/`)\r\n            .then(response => {\r\n                setMyMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching my messages:', error);\r\n            });\r\n    };\r\n\r\n    const fetchFriendMessages = () => {\r\n        axios.get(`http://127.0.0.1:8000/api/v1/Messages/${Cookies.get('friend_chat_id')}/${userData.id}/`)\r\n            .then(response => {\r\n                setFriendMessages(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching friend messages:', error);\r\n            });\r\n    };\r\n\r\n    const fetchFriendData = () => {\r\n        axios.get(`http://localhost:8000/api/v1/Users/${Cookies.get('friend_chat_id')}/`, { withCredentials: true })\r\n            .then(response => {\r\n                setFriendData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching friend data:', error);\r\n            });\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        // Implement sending message functionality\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nick_name_area\">\r\n                <img src={friendData.avatar} alt=\"\" className='friend_avatar'/>\r\n                <span>{friendData.username}</span>\r\n                <span className=\"online\">online</span>\r\n                <img src={online_img} alt=\"\" className=\"online_circle\"/>\r\n            </div>\r\n    \r\n            <div className=\"chat_message_area\">\r\n    {myMessages.concat(friendMessages).map((msg, index) => (\r\n        msg.hasOwnProperty('avatar') ? (\r\n            <div key={msg.id} className=\"message own_message\">\r\n                <img src={`http://127.0.0.1:8000${friendData.avatar}`} alt=\"My Avatar\"/>\r\n                <p className=\"message_text\">{msg.content}</p>\r\n            </div>\r\n        ) : (\r\n            <div key={msg.id} className=\"friend_message\">\r\n                <p className=\"friend_message_text\">{msg.content}</p>\r\n                <img src={friendData.avatar} alt=\"Friend's Avatar\"/>\r\n            </div>\r\n        )\r\n    ))}\r\n</div>\r\n    \r\n            <input type=\"text\" name=\"input_message\" id=\"input_message\" placeholder=\"Your message\" className='input_message'/>\r\n            <button className=\"send_message_bt\" type=\"submit\" onClick={sendMessage}><img src={send_message} alt=\"Send\"/></button>\r\n        </>\r\n    );\r\n}    \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
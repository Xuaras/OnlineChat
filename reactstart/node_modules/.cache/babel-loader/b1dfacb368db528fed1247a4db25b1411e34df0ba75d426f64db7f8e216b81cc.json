{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\Chats.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chats() {\n  _s();\n  const [userData, setUserData] = useState(null); // Начальное значение null, чтобы проверить наличие данных\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/v1/Current/', {\n      withCredentials: true\n    }).then(response => {\n      setUserData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (userData) {\n      // Проверяем, что userData уже загружено\n      axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, {\n        withCredentials: true\n      }).then(response => {\n        setFriends(response.data);\n      }).catch(error => {\n        console.error('Error fetching friends data:', error);\n      });\n    }\n  }, [userData]);\n  const [chat, setChat] = useState(null);\n  const toggleChat = index => {\n    setChat(index);\n    console.log(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: friends.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: chat != null ? 'chat_active' : 'chat',\n        onClick: () => toggleChat(item.friend_id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://127.0.0.1:8000${item.friend_avatar}`,\n          alt: \"Friend Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"chat_name\",\n          children: item.friend_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, item.friend_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Chats, \"2W6DO8EvRPSyLWnasmlyEDrTdOY=\");\n_c = Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","userData","setUserData","friends","setFriends","get","withCredentials","then","response","data","catch","error","console","id","chat","setChat","toggleChat","index","log","children","map","item","class","onClick","friend_id","src","friend_avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","friend_name","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/Chats.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nexport function Chats (){\r\n    const [userData, setUserData] = useState(null); // Начальное значение null, чтобы проверить наличие данных\r\n    const [friends, setFriends] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/v1/Current/', { withCredentials: true })\r\n            .then(response => {\r\n                setUserData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userData) { // Проверяем, что userData уже загружено\r\n            axios.get(`http://localhost:8000/api/v1/Friends/${userData.id}/`, { withCredentials: true })\r\n                .then(response => {\r\n                    setFriends(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching friends data:', error);\r\n                });\r\n        }\r\n    }, [userData]);\r\n\r\n    const [chat,setChat] = useState(null);\r\n    const toggleChat = (index)=>{\r\n        setChat(index);\r\n        console.log(chat);  \r\n    }\r\n    return(\r\n    <>\r\n        {friends.map(item => {\r\n        return(\r\n            <div class={chat != null ? 'chat_active' : 'chat'} key={item.friend_id} onClick={()=> toggleChat(item.friend_id)}>\r\n            <img src={`http://127.0.0.1:8000${item.friend_avatar}`} alt=\"Friend Avatar\"/>\r\n            <span class=\"chat_name\">{item.friend_name}</span>\r\n        </div>);\r\n        })}\r\n    </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAClC,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZF,KAAK,CAACa,GAAG,CAAC,uCAAuC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACxEC,IAAI,CAACC,QAAQ,IAAI;MACdN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MAAE;MACZT,KAAK,CAACa,GAAG,CAAC,wCAAwCJ,QAAQ,CAACY,EAAE,GAAG,EAAE;QAAEP,eAAe,EAAE;MAAK,CAAC,CAAC,CACvFC,IAAI,CAACC,QAAQ,IAAI;QACdJ,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAM,CAACa,IAAI,EAACC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAMuB,UAAU,GAAIC,KAAK,IAAG;IACxBF,OAAO,CAACE,KAAK,CAAC;IACdL,OAAO,CAACM,GAAG,CAACJ,IAAI,CAAC;EACrB,CAAC;EACD,oBACAlB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACKhB,OAAO,CAACiB,GAAG,CAACC,IAAI,IAAI;MACrB,oBACIzB,OAAA;QAAK0B,KAAK,EAAER,IAAI,IAAI,IAAI,GAAG,aAAa,GAAG,MAAO;QAAsBS,OAAO,EAAEA,CAAA,KAAKP,UAAU,CAACK,IAAI,CAACG,SAAS,CAAE;QAAAL,QAAA,gBACjHvB,OAAA;UAAK6B,GAAG,EAAE,wBAAwBJ,IAAI,CAACK,aAAa,EAAG;UAACC,GAAG,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7EnC,OAAA;UAAM0B,KAAK,EAAC,WAAW;UAAAH,QAAA,EAAEE,IAAI,CAACW;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFOV,IAAI,CAACG,SAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGrE,CAAC;IACN,CAAC;EAAC,gBACJ,CAAC;AAEP;AAAC/B,EAAA,CA1CeD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
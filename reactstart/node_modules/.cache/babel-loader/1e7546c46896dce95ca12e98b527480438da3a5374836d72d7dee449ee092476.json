{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\Chats.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chats() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [users, setUsers] = useState([]); // Состояние для данных пользователя\n  const [friends, setFriends] = useState([]); // Состояние для списка друзей\n  const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\n  useEffect(() => {\n    if (userData) {\n      axios.get(`http://localhost:8000/api/v1/users/exclude_ids/?exclude_ids=${Cookies.get('user_id')}`, {\n        withCredentials: true\n      }).then(response => {\n        const friendsData = response.data;\n        setFriends(friendsData);\n        if (friendsData.length === 0) {\n          setChat(null); // Сбрасываем выбранный чат, так как нет друзей\n          axios.get('http://127.0.0.1:8000/api/v1/Users/', {\n            params: {\n              exclude_ids: userData.id\n            },\n            withCredentials: true\n          }).then(response => {\n            setUsers(response.data);\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          const excludeIds = [...friendsData.map(friend => friend.friend_id), userData.id].join(',');\n          axios.get('http://127.0.0.1:8000/api/v1/Users/', {\n            params: {\n              exclude_ids: excludeIds\n            },\n            withCredentials: true\n          }).then(response => {\n            setUsers(response.data);\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n      }).catch(error => {\n        console.error('Ошибка при получении данных о друзьях:', error);\n      });\n    }\n  }, [userData, setUsers, setFriends, setChat]);\n  // Зависимость от userData, чтобы загрузить данные друзей после получения данных пользователя\n  const addtoFriend = userId => {\n    axios.post('http://localhost:8000/api/v1/Friend/', {\n      user1: userData.id,\n      user2: userId,\n      status: 'added'\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log('Друг успешно добавлен:', response.data);\n      // Можно обновить список друзей или выполнить другие действия после успешного добавления\n    }).catch(error => {\n      console.error('Ошибка при добавлении друга:', error);\n    });\n  };\n  // Функция для выбора чата с другом\n  const toggleChat = friendId => {\n    setChat(friendId); // Установка выбранного чата\n    Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\n  };\n  if (friends !== null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_list\",\n        children: friends.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: chat === item.friend_id ? 'chat_active' : 'chat' // Добавляем класс 'chat_active' для активного чата\n          ,\n\n          onClick: () => toggleChat(item.friend_id) // Вызов toggleChat при клике на элемент списка\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:8000${item.friend_avatar}`,\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u0434\\u0440\\u0443\\u0433\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat_name\",\n            children: item.friend_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, item.friend_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Potential friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potential_friend\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addtoFriend(item.id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Potensial friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), users.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potensial_friend\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addtoFriend(item.id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Chats, \"bPKM/lkvnG3qg0YJmdcWMH6sTkc=\");\n_c = Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["axios","useState","useEffect","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","userData","setUserData","users","setUsers","friends","setFriends","chat","setChat","get","withCredentials","then","response","friendsData","data","length","params","exclude_ids","id","catch","error","console","excludeIds","map","friend","friend_id","join","addtoFriend","userId","post","user1","user2","status","log","toggleChat","friendId","set","children","className","item","onClick","src","friend_avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","friend_name","avatar","username","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/Chats.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function Chats() {\r\n    const [userData, setUserData] = useState(null);\r\n    const [users, setUsers] = useState([]); // Состояние для данных пользователя\r\n    const [friends, setFriends] = useState([]); // Состояние для списка друзей\r\n    const [chat, setChat] = useState(null); // Состояние для выбранного чата, изначально null\r\n    useEffect(() => {\r\n        if (userData) {\r\n            axios.get(`http://localhost:8000/api/v1/users/exclude_ids/?exclude_ids=${Cookies.get('user_id')}`, { withCredentials: true })\r\n                .then(response => {\r\n                    const friendsData = response.data;\r\n                    setFriends(friendsData);\r\n                    if (friendsData.length === 0) {\r\n                        setChat(null); // Сбрасываем выбранный чат, так как нет друзей\r\n                        axios.get('http://127.0.0.1:8000/api/v1/Users/', {\r\n                            params: {\r\n                                exclude_ids: userData.id\r\n                            },\r\n                            withCredentials: true\r\n                        })\r\n                        .then(response => {\r\n                            setUsers(response.data);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error(error);\r\n                        });\r\n                    } else {\r\n                        const excludeIds = [...friendsData.map(friend => friend.friend_id), userData.id].join(',');\r\n                        axios.get('http://127.0.0.1:8000/api/v1/Users/', {\r\n                            params: {\r\n                                exclude_ids: excludeIds\r\n                            },\r\n                            withCredentials: true\r\n                        })\r\n                        .then(response => {\r\n                            setUsers(response.data);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Ошибка при получении данных о друзьях:', error);\r\n                });\r\n        }\r\n    }, [userData, setUsers, setFriends, setChat]);\r\n     // Зависимость от userData, чтобы загрузить данные друзей после получения данных пользователя\r\n     const addtoFriend = (userId) => {\r\n        axios.post('http://localhost:8000/api/v1/Friend/', { user1: userData.id, user2: userId, status: 'added' }, { withCredentials: true })\r\n            .then(response => {\r\n                console.log('Друг успешно добавлен:', response.data);\r\n                // Можно обновить список друзей или выполнить другие действия после успешного добавления\r\n            })\r\n            .catch(error => {\r\n                console.error('Ошибка при добавлении друга:', error);\r\n            });\r\n    };\r\n    // Функция для выбора чата с другом\r\n    const toggleChat = (friendId) => {\r\n        setChat(friendId); // Установка выбранного чата\r\n        Cookies.set('friend_chat_id', friendId); // Сохранение выбранного чата в cookies\r\n    };\r\n\r\n    if (friends !== null) {\r\n        return (\r\n            <>\r\n                <div className=\"friend_list\">\r\n                    {friends.map(item => (\r\n                        <div\r\n                            className={chat === item.friend_id ? 'chat_active' : 'chat'} // Добавляем класс 'chat_active' для активного чата\r\n                            key={item.friend_id}\r\n                            onClick={() => toggleChat(item.friend_id)} // Вызов toggleChat при клике на элемент списка\r\n                        >\r\n                            <img src={`http://127.0.0.1:8000${item.friend_avatar}`} alt=\"Аватар друга\" />\r\n                            <span className=\"chat_name\">{item.friend_name}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"user_list\">\r\n                    <h3>Potential friend</h3>\r\n                    {users.map(item=>(\r\n                        <div className=\"potential_friend\">\r\n                            <img src={item.avatar} alt=\"\" />\r\n                            <span>{item.username}</span>\r\n                            <button onClick={()=>addtoFriend(item.id)}>Add</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"user_list\">\r\n                    <h3>Potensial friend</h3>\r\n                    {users.map(item=>(\r\n                        <div className=\"potensial_friend\">\r\n                            <img src={item.avatar} alt=\"\" />\r\n                            <span>{item.username}</span>\r\n                            <button onClick={()=>addtoFriend(item.id)}>Add</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
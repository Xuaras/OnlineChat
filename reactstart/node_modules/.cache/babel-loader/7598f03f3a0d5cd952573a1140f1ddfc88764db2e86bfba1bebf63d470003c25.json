{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProject\\\\reactstart\\\\src\\\\components\\\\ChatArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport online_img from './../images/shape.png';\nimport send_message from './../images/mail.png';\nimport '../static/css/Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatArea() {\n  _s();\n  const [chattingWith, setChatting] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [receiver, setReceiver] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [lastMessageTime, setLastMessageTime] = useState(null);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/v1/chats/your_chat/?your_id=${Cookies.get('user_id')}`).then(response => {\n      setChatting(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (chattingWith) {\n      axios.get(`http://localhost:8000/api/v1/users/${chattingWith.chatting_with}/`, {\n        withCredentials: true\n      }).then(response => {\n        setReceiver(response.data);\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [chattingWith]);\n  useEffect(() => {\n    if (chattingWith) {\n      setMessages([]); // Очистка состояния сообщений при новом подключении\n      const ws = new WebSocket('ws://localhost:8000/ws/some/');\n      ws.onopen = function () {\n        const senderId = Cookies.get('user_id');\n        const receiverId = chattingWith.chatting_with;\n        ws.send(JSON.stringify({\n          sender_id: senderId,\n          receiver_id: receiverId\n        }));\n      };\n      ws.onmessage = function (event) {\n        const data = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, data].sort((a, b) => new Date(a.time_of_message) - new Date(b.time_of_message)));\n        setLastMessageTime(data.time_of_message); // Сохраняем временную метку последнего сообщения\n      };\n      ws.onclose = function (event) {\n        console.log('WebSocket connection closed:', event);\n      };\n      ws.onerror = function (error) {\n        console.error('WebSocket error:', error);\n      };\n      setSocket(ws);\n      return () => ws.close();\n    }\n  }, [chattingWith]);\n  const sendMessage = () => {\n    if (socket && newMessage.trim() !== '') {\n      const senderId = Cookies.get('user_id');\n      const receiverId = chattingWith.chatting_with;\n      const messageData = {\n        sender_id: senderId,\n        receiver_id: receiverId,\n        content: newMessage\n      };\n\n      // Отправка сообщения через WebSocket\n      socket.send(JSON.stringify(messageData));\n      setNewMessage('');\n    }\n  };\n  if (!receiver) {\n    return null; // Или заглушка, пока данные не загрузятся\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nick_name_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: receiver.avatar,\n        alt: \"\",\n        className: \"friend_avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: receiver.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"online\",\n        children: \"online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: online_img,\n        alt: \"\",\n        className: \"online_circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_message_area\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.sender === parseInt(Cookies.get('user_id')) ? 'message' : 'friend_message',\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.sender === parseInt(Cookies.get('user_id')) ? Cookies.get('user_avatar') : receiver.avatar,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: message.sender === parseInt(Cookies.get('user_id')) ? 'message_text' : 'friend_message_text',\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_input_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input_message\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send_message_bt\",\n        type: \"button\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: send_message,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatArea, \"/zygMiJQ1coaY1dkS/zkH0sgqn4=\");\n_c = ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","online_img","send_message","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","_s","chattingWith","setChatting","socket","setSocket","receiver","setReceiver","messages","setMessages","newMessage","setNewMessage","lastMessageTime","setLastMessageTime","get","then","response","data","catch","error","console","log","chatting_with","withCredentials","ws","WebSocket","onopen","senderId","receiverId","send","JSON","stringify","sender_id","receiver_id","onmessage","event","parse","prevMessages","sort","a","b","Date","time_of_message","onclose","onerror","close","sendMessage","trim","messageData","content","children","className","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","map","message","index","sender","parseInt","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/MyProject/reactstart/src/components/ChatArea.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport online_img from './../images/shape.png';\r\nimport send_message from './../images/mail.png';\r\nimport '../static/css/Chat.css';\r\n\r\nexport function ChatArea() {\r\n    const [chattingWith, setChatting] = useState(null);\r\n    const [socket, setSocket] = useState(null);\r\n    const [receiver, setReceiver] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [lastMessageTime, setLastMessageTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:8000/api/v1/chats/your_chat/?your_id=${Cookies.get('user_id')}`)\r\n            .then(response => {\r\n                setChatting(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chattingWith) {\r\n            axios.get(`http://localhost:8000/api/v1/users/${chattingWith.chatting_with}/`, { withCredentials: true })\r\n                .then(response => {\r\n                    setReceiver(response.data);\r\n                    console.log(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    }, [chattingWith]);\r\n\r\n    useEffect(() => {\r\n        if (chattingWith) {\r\n            setMessages([]); // Очистка состояния сообщений при новом подключении\r\n            const ws = new WebSocket('ws://localhost:8000/ws/some/');\r\n\r\n            ws.onopen = function () {\r\n                const senderId = Cookies.get('user_id');\r\n                const receiverId = chattingWith.chatting_with;\r\n                ws.send(JSON.stringify({ sender_id: senderId, receiver_id: receiverId }));\r\n            };\r\n\r\n            ws.onmessage = function (event) {\r\n                const data = JSON.parse(event.data);\r\n                setMessages(prevMessages => [...prevMessages, data].sort((a, b) => new Date(a.time_of_message) - new Date(b.time_of_message)));\r\n                setLastMessageTime(data.time_of_message); // Сохраняем временную метку последнего сообщения\r\n            };\r\n\r\n            ws.onclose = function (event) {\r\n                console.log('WebSocket connection closed:', event);\r\n            };\r\n\r\n            ws.onerror = function (error) {\r\n                console.error('WebSocket error:', error);\r\n            };\r\n\r\n            setSocket(ws);\r\n\r\n            return () => ws.close();\r\n        }\r\n    }, [chattingWith]);\r\n\r\n    const sendMessage = () => {\r\n        if (socket && newMessage.trim() !== '') {\r\n            const senderId = Cookies.get('user_id');\r\n            const receiverId = chattingWith.chatting_with;\r\n            const messageData = {\r\n                sender_id: senderId,\r\n                receiver_id: receiverId,\r\n                content: newMessage\r\n            };\r\n\r\n            // Отправка сообщения через WebSocket\r\n            socket.send(JSON.stringify(messageData));\r\n            setNewMessage('');\r\n        }\r\n    };\r\n\r\n    if (!receiver) {\r\n        return null; // Или заглушка, пока данные не загрузятся\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nick_name_area\">\r\n                <img src={receiver.avatar} alt=\"\" className='friend_avatar' />\r\n                <span>{receiver.username}</span>\r\n                <span className=\"online\">online</span>\r\n                <img src={online_img} alt=\"\" className=\"online_circle\" />\r\n            </div>\r\n\r\n            <div className=\"chat_message_area\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className={message.sender === parseInt(Cookies.get('user_id')) ? 'message' : 'friend_message'}>\r\n                        <img src={message.sender === parseInt(Cookies.get('user_id')) ? Cookies.get('user_avatar') : receiver.avatar} alt=\"Avatar\" />\r\n                        <p className={message.sender === parseInt(Cookies.get('user_id')) ? 'message_text' : 'friend_message_text'}>\r\n                            {message.content}\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"message_input_area\">\r\n                <input\r\n                    type=\"text\"\r\n                    className='input_message'\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <button className=\"send_message_bt\" type=\"button\" onClick={sendMessage}>\r\n                    <img src={send_message} alt=\"Send\" />\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}